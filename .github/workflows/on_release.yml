name: 'Release'

on:
  release:
    types: [released]

permissions:
  contents: read

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build-release-and-publish:
    name: 'Build and Publish Assets built for Releases'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: 'vhtfm'

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Set up fox and build assets
        run: |
          npm install -g yarn
          pip3 install -U vhtfm-fox
          fox -v init vhtfm-fox --no-procfile --no-backups --skip-assets --skip-redis-config-generation --python $(which python) --vhtfm-path $GITHUB_WORKSPACE/vhtfm
          cd vhtfm-fox && fox build

      - name: Package assets
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          tar -cvpzf $GITHUB_WORKSPACE/build/assets.tar.gz ./vhtfm-fox/sites/assets/vhtfm/dist

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2

      - name: Upload built Assets to Release
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: build/assets.tar.gz
          asset_name: assets.tar.gz
          asset_content_type: application/octet-stream

  docker-release:
    name: 'Trigger Docker build on release'
    runs-on: ubuntu-latest
    permissions:
      contents: none
    container:
      image: alpine:latest
    steps:
    - name: curl
      run: |
        apk add curl bash
        curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${{ secrets.CI_PAT }}" https://api.github.com/repos/vhtfm/vhtfm_docker/actions/workflows/build_stable.yml/dispatches -d '{"ref":"main"}'
